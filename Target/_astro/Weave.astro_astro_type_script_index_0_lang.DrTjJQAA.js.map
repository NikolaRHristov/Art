{"version":3,"file":"Weave.astro_astro_type_script_index_0_lang.DrTjJQAA.js","sources":["../../Source/Function/Page/Weave.ts"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n\tconst scene = new THREE.Scene();\n\tconst camera = new THREE.PerspectiveCamera(\n\t\t75,\n\t\twindow.innerWidth / window.innerHeight,\n\t\t0.1,\n\t\t1000,\n\t);\n\tconst renderer = new THREE.WebGLRenderer({ antialias: true });\n\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\trenderer.setClearColor(0xffffff, 1);\n\tdocument.body.appendChild(renderer.domElement);\n\n\tconst light = new THREE.PointLight(0xffffff, 1, 100);\n\tlight.position.set(10, 10, 10);\n\tscene.add(light);\n\n\tconst ambientLight = new THREE.AmbientLight(0x404040);\n\tscene.add(ambientLight);\n\n\tconst pipeMaterial = new THREE.ShaderMaterial({\n\t\tuniforms: {\n\t\t\tdiffuse: { value: new THREE.Color(0x800080) },\n\t\t\tshininess: { value: 30.0 },\n\t\t},\n\t\tvertexShader: `\n            varying vec3 vNormal;\n            varying vec3 vViewPosition;\n            \n            void main() {\n                vNormal = normalize(normalMatrix * normal);\n                vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n                vViewPosition = -mvPosition.xyz;\n                gl_Position = projectionMatrix * mvPosition;\n            }\n        `,\n\t\tfragmentShader: `\n            uniform vec3 diffuse;\n            uniform float shininess;\n            \n            varying vec3 vNormal;\n            varying vec3 vViewPosition;\n            \n            void main() {\n                vec3 normal = normalize(vNormal);\n                vec3 viewPosition = normalize(vViewPosition);\n                \n                float diffuseStrength = max(dot(normal, viewPosition), 0.0);\n                vec3 diffuseColor = diffuse * diffuseStrength;\n                \n                vec3 halfVector = normalize(viewPosition + vec3(0.0, 0.0, 1.0));\n                float specularStrength = pow(max(dot(normal, halfVector), 0.0), shininess);\n                vec3 specularColor = vec3(1.0, 1.0, 1.0) * specularStrength;\n                \n                gl_FragColor = vec4(diffuseColor + specularColor, 1.0);\n            }\n        `,\n\t});\n\n\tconst createTube = (points) => {\n\t\tconst curve = new THREE.CatmullRomCurve3(points);\n\t\tconst tubeGeometry = new THREE.TubeGeometry(curve, 64, 0.3, 16, false);\n\t\tconst tube = new THREE.Mesh(tubeGeometry, pipeMaterial);\n\t\tscene.add(tube);\n\t};\n\n\tconst gridSize = 10;\n\tconst spacing = 1;\n\n\t// Create horizontal tubes\n\tfor (let i = 0; i < gridSize; i++) {\n\t\tconst points = [];\n\t\tfor (let j = 0; j < gridSize; j++) {\n\t\t\tconst x = (j - gridSize / 2) * spacing;\n\t\t\tconst y = (i - gridSize / 2) * spacing;\n\t\t\tconst z = j % 2 === 0 ? 0.3 : -0.3;\n\t\t\tpoints.push(new THREE.Vector3(x, y, z));\n\t\t}\n\t\tcreateTube(points);\n\t}\n\n\t// Create vertical tubes\n\tfor (let j = 0; j < gridSize; j++) {\n\t\tconst points = [];\n\t\tfor (let i = 0; i < gridSize; i++) {\n\t\t\tconst x = (j - gridSize / 2) * spacing;\n\t\t\tconst y = (i - gridSize / 2) * spacing;\n\t\t\tconst z = i % 2 === 0 ? -0.3 : 0.3;\n\t\t\tpoints.push(new THREE.Vector3(x, y, z));\n\t\t}\n\t\tcreateTube(points);\n\t}\n\n\tcamera.position.z = 10;\n\tcamera.lookAt(scene.position);\n\n\tfunction animate() {\n\t\trequestAnimationFrame(animate);\n\t\trenderer.render(scene, camera);\n\t}\n\n\tanimate();\n\n\twindow.addEventListener(\"resize\", () => {\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t});\n});\n"],"names":["scene","camera","renderer","light","ambientLight","pipeMaterial","createTube","points","curve","tubeGeometry","tube","gridSize","spacing","i","j","x","y","z","animate"],"mappings":"AAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAC7C,MAAAA,EAAQ,IAAI,MAAM,MAClBC,EAAS,IAAI,MAAM,kBACxB,GACA,OAAO,WAAa,OAAO,YAC3B,GACA,GAAA,EAEKC,EAAW,IAAI,MAAM,cAAc,CAAE,UAAW,GAAM,EAE5DA,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EAC7CA,EAAA,cAAc,SAAU,CAAC,EACzB,SAAA,KAAK,YAAYA,EAAS,UAAU,EAE7C,MAAMC,EAAQ,IAAI,MAAM,WAAW,SAAU,EAAG,GAAG,EACnDA,EAAM,SAAS,IAAI,GAAI,GAAI,EAAE,EAC7BH,EAAM,IAAIG,CAAK,EAEf,MAAMC,EAAe,IAAI,MAAM,aAAa,OAAQ,EACpDJ,EAAM,IAAII,CAAY,EAEhB,MAAAC,EAAe,IAAI,MAAM,eAAe,CAC7C,SAAU,CACT,QAAS,CAAE,MAAO,IAAI,MAAM,MAAM,OAAQ,CAAE,EAC5C,UAAW,CAAE,MAAO,EAAK,CAC1B,EACA,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAqBhB,EAEKC,EAAcC,GAAW,CAC9B,MAAMC,EAAQ,IAAI,MAAM,iBAAiBD,CAAM,EACzCE,EAAe,IAAI,MAAM,aAAaD,EAAO,GAAI,GAAK,GAAI,EAAK,EAC/DE,EAAO,IAAI,MAAM,KAAKD,EAAcJ,CAAY,EACtDL,EAAM,IAAIU,CAAI,CAAA,EAGTC,EAAW,GACXC,EAAU,EAGhB,QAASC,EAAI,EAAGA,EAAIF,EAAUE,IAAK,CAClC,MAAMN,EAAS,CAAA,EACf,QAASO,EAAI,EAAGA,EAAIH,EAAUG,IAAK,CAC5B,MAAAC,GAAKD,EAAIH,EAAW,GAAKC,EACzBI,GAAKH,EAAIF,EAAW,GAAKC,EACzBK,EAAIH,EAAI,IAAM,EAAI,GAAM,IAC9BP,EAAO,KAAK,IAAI,MAAM,QAAQQ,EAAGC,EAAGC,CAAC,CAAC,CACvC,CACAX,EAAWC,CAAM,CAClB,CAGA,QAASO,EAAI,EAAGA,EAAIH,EAAUG,IAAK,CAClC,MAAMP,EAAS,CAAA,EACf,QAASM,EAAI,EAAGA,EAAIF,EAAUE,IAAK,CAC5B,MAAAE,GAAKD,EAAIH,EAAW,GAAKC,EACzBI,GAAKH,EAAIF,EAAW,GAAKC,EACzBK,EAAIJ,EAAI,IAAM,EAAI,IAAO,GAC/BN,EAAO,KAAK,IAAI,MAAM,QAAQQ,EAAGC,EAAGC,CAAC,CAAC,CACvC,CACAX,EAAWC,CAAM,CAClB,CAEAN,EAAO,SAAS,EAAI,GACbA,EAAA,OAAOD,EAAM,QAAQ,EAE5B,SAASkB,GAAU,CAClB,sBAAsBA,CAAO,EACpBhB,EAAA,OAAOF,EAAOC,CAAM,CAC9B,CAEQiB,IAED,OAAA,iBAAiB,SAAU,IAAM,CAChCjB,EAAA,OAAS,OAAO,WAAa,OAAO,YAC3CA,EAAO,uBAAuB,EAC9BC,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,CAAA,CACtD,CACF,CAAC"}