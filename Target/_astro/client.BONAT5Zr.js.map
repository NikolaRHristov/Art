{"version":3,"file":"client.BONAT5Zr.js","sources":["../../../../../node_modules/solid-js/store/dist/store.js","../../../../../node_modules/@astrojs/solid-js/dist/client.js"],"sourcesContent":["import { $PROXY, $TRACK, getListener, batch, createSignal } from \"solid-js\";\n\nconst $RAW = Symbol(\"store-raw\"),\n  $NODE = Symbol(\"store-node\"),\n  $HAS = Symbol(\"store-has\"),\n  $SELF = Symbol(\"store-self\");\nfunction wrap$1(value) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: (p = new Proxy(value, proxyTraps$1))\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const prop = keys[i];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p)\n          });\n        }\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return (\n    obj != null &&\n    typeof obj === \"object\" &&\n    (obj[$PROXY] ||\n      !(proto = Object.getPrototypeOf(obj)) ||\n      proto === Object.prototype ||\n      Array.isArray(obj))\n  );\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if ((result = item != null && item[$RAW])) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);\n    else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);\n    else set.add(item);\n    const keys = Object.keys(item),\n      desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getNodes(target, symbol) {\n  let nodes = target[symbol];\n  if (!nodes)\n    Object.defineProperty(target, symbol, {\n      value: (nodes = Object.create(null))\n    });\n  return nodes;\n}\nfunction getNode(nodes, property, value) {\n  if (nodes[property]) return nodes[property];\n  const [s, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s.$ = set;\n  return (nodes[property] = s);\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  getListener() && getNode(getNodes(target, $NODE), $SELF)();\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (\n        getListener() &&\n        (typeof value !== \"function\" || target.hasOwnProperty(property)) &&\n        !(desc && desc.get)\n      )\n        value = getNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (\n      property === $RAW ||\n      property === $PROXY ||\n      property === $TRACK ||\n      property === $NODE ||\n      property === $HAS ||\n      property === \"__proto__\"\n    )\n      return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value) return;\n  const prev = state[property],\n    len = state.length;\n  if (value === undefined) {\n    delete state[property];\n    if (state[$HAS] && state[$HAS][property] && prev !== undefined) state[$HAS][property].$();\n  } else {\n    state[property] = value;\n    if (state[$HAS] && state[$HAS][property] && prev === undefined) state[$HAS][property].$();\n  }\n  let nodes = getNodes(state, $NODE),\n    node;\n  if ((node = getNode(nodes, property, prev))) node.$(() => value);\n  if (Array.isArray(state) && state.length !== len) {\n    for (let i = state.length; i < len; i++) (node = nodes[i]) && node.$();\n    (node = getNode(nodes, \"length\", len)) && node.$(state.length);\n  }\n  (node = nodes[$SELF]) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\") next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next) return;\n    let i = 0,\n      len = next.length;\n    for (; i < len; i++) {\n      const value = next[i];\n      if (current[i] !== value) setProperty(current, i, value);\n    }\n    setProperty(current, \"length\", len);\n  } else mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n    prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n      isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const { from = 0, to = current.length - 1, by = 1 } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || (isWrappable(prev) && isWrappable(value) && !Array.isArray(value))) {\n    mergeStoreNode(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1\n        ? updateArray(unwrappedStore, args[0])\n        : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\n\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (\n    !desc ||\n    desc.get ||\n    desc.set ||\n    !desc.configurable ||\n    property === $PROXY ||\n    property === $NODE\n  )\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  desc.set = v => (target[$PROXY][property] = v);\n  return desc;\n}\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      const isFunction = typeof value === \"function\";\n      if (getListener() && (!isFunction || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getNode(nodes, property, value)();\n      else if (value != null && isFunction && value === Array.prototype[property]) {\n        return (...args) => batch(() => Array.prototype[property].apply(receiver, args));\n      }\n    }\n    return isWrappable(value) ? wrap(value) : value;\n  },\n  has(target, property) {\n    if (\n      property === $RAW ||\n      property === $PROXY ||\n      property === $TRACK ||\n      property === $NODE ||\n      property === $HAS ||\n      property === \"__proto__\"\n    )\n      return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n  set(target, property, value) {\n    batch(() => setProperty(target, property, unwrap(value)));\n    return true;\n  },\n  deleteProperty(target, property) {\n    batch(() => setProperty(target, property, undefined, true));\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: (p = new Proxy(value, proxyTraps))\n    });\n    const keys = Object.keys(value),\n      desc = Object.getOwnPropertyDescriptors(value);\n    const proto = Object.getPrototypeOf(value);\n    const isClass =\n      proto !== null &&\n      value !== null &&\n      typeof value === \"object\" &&\n      !Array.isArray(value) &&\n      proto !== Object.prototype;\n    if (isClass) {\n      const descriptors = Object.getOwnPropertyDescriptors(proto);\n      keys.push(...Object.keys(descriptors));\n      Object.assign(desc, descriptors);\n    }\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (isClass && prop === \"constructor\") continue;\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get,\n          configurable: true\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n          set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set,\n          configurable: true\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedStore = unwrap(state || {});\n  const wrappedStore = wrap(unwrappedStore);\n  return wrappedStore;\n}\nfunction modifyMutable(state, modifier) {\n  batch(() => modifier(unwrap(state)));\n}\n\nconst $ROOT = Symbol(\"store-root\");\nfunction applyState(target, parent, property, merge, key) {\n  const previous = parent[property];\n  if (target === previous) return;\n  const isArray = Array.isArray(target);\n  if (\n    property !== $ROOT &&\n    (!isWrappable(target) ||\n      !isWrappable(previous) ||\n      isArray !== Array.isArray(previous) ||\n      (key && target[key] !== previous[key]))\n  ) {\n    setProperty(parent, property, target);\n    return;\n  }\n  if (isArray) {\n    if (\n      target.length &&\n      previous.length &&\n      (!merge || (key && target[0] && target[0][key] != null))\n    ) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (\n        start = 0, end = Math.min(previous.length, target.length);\n        start < end &&\n        (previous[start] === target[start] ||\n          (key && previous[start] && target[start] && previous[start][key] === target[start][key]));\n        start++\n      ) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n        newIndices = new Map();\n      for (\n        end = previous.length - 1, newEnd = target.length - 1;\n        end >= start &&\n        newEnd >= start &&\n        (previous[end] === target[newEnd] ||\n          (key && previous[start] && target[start] && previous[end][key] === target[newEnd][key]));\n        end--, newEnd--\n      ) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key && item ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key && item ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const { merge, key = \"id\" } = options,\n    v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    const res = applyState(\n      v,\n      {\n        [$ROOT]: state\n      },\n      $ROOT,\n      merge,\n      key\n    );\n    return res === undefined ? state : res;\n  };\n}\nconst producers = new WeakMap();\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    let proxy;\n    return isWrappable(value)\n      ? producers.get(value) ||\n          (producers.set(value, (proxy = new Proxy(value, setterTraps))), proxy)\n      : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined, true);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) {\n      let proxy;\n      if (!(proxy = producers.get(state))) {\n        producers.set(state, (proxy = new Proxy(state, setterTraps)));\n      }\n      fn(proxy);\n    }\n    return state;\n  };\n}\n\nconst DEV = undefined;\n\nexport { $RAW, DEV, createMutable, createStore, modifyMutable, produce, reconcile, unwrap };\n","import { Suspense } from \"solid-js\";\nimport { createStore, reconcile } from \"solid-js/store\";\nimport { createComponent, hydrate, render } from \"solid-js/web\";\nconst alreadyInitializedElements = /* @__PURE__ */ new WeakMap();\nvar client_default = (element) => (Component, props, slotted, { client }) => {\n  if (!element.hasAttribute(\"ssr\")) return;\n  const isHydrate = client !== \"only\";\n  const bootstrap = isHydrate ? hydrate : render;\n  let slot;\n  let _slots = {};\n  if (Object.keys(slotted).length > 0) {\n    if (client !== \"only\") {\n      const iterator = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, (node) => {\n        if (node === element) return NodeFilter.FILTER_SKIP;\n        if (node.nodeName === \"ASTRO-SLOT\") return NodeFilter.FILTER_ACCEPT;\n        if (node.nodeName === \"ASTRO-ISLAND\") return NodeFilter.FILTER_REJECT;\n        return NodeFilter.FILTER_SKIP;\n      });\n      while (slot = iterator.nextNode())\n        _slots[slot.getAttribute(\"name\") || \"default\"] = slot;\n    }\n    for (const [key, value] of Object.entries(slotted)) {\n      if (_slots[key]) continue;\n      _slots[key] = document.createElement(\"astro-slot\");\n      if (key !== \"default\") _slots[key].setAttribute(\"name\", key);\n      _slots[key].innerHTML = value;\n    }\n  }\n  const { default: children, ...slots } = _slots;\n  const renderId = element.dataset.solidRenderId;\n  if (alreadyInitializedElements.has(element)) {\n    alreadyInitializedElements.get(element)(\n      // reconcile will make sure to apply as little updates as possible, and also remove missing values w/o breaking reactivity\n      reconcile({\n        ...props,\n        ...slots,\n        children\n      })\n    );\n  } else {\n    const [store, setStore] = createStore({\n      ...props,\n      ...slots,\n      children\n    });\n    alreadyInitializedElements.set(element, setStore);\n    const dispose = bootstrap(\n      () => {\n        const inner = () => createComponent(Component, store);\n        if (isHydrate) {\n          return createComponent(Suspense, {\n            get children() {\n              return inner();\n            }\n          });\n        } else {\n          return inner();\n        }\n      },\n      element,\n      {\n        renderId\n      }\n    );\n    element.addEventListener(\"astro:unmount\", () => dispose(), { once: true });\n  }\n};\nexport {\n  client_default as default\n};\n"],"names":["$RAW","$NODE","$HAS","$SELF","wrap$1","value","p","$PROXY","proxyTraps$1","keys","desc","i","l","prop","isWrappable","obj","proto","unwrap","item","set","result","unwrapped","v","getNodes","target","symbol","nodes","getNode","property","s","createSignal","proxyDescriptor$1","trackSelf","getListener","ownKeys","receiver","$TRACK","tracked","setProperty","state","deleting","prev","len","node","mergeStoreNode","key","updateArray","current","next","updatePath","path","traversed","part","partType","isArray","from","to","by","createStore","store","options","unwrappedStore","wrappedStore","setStore","args","batch","$ROOT","applyState","parent","merge","previous","j","start","end","newEnd","newIndicesNext","keyVal","temp","newIndices","targetKeys","previousKeys","reconcile","res","alreadyInitializedElements","client_default","element","Component","props","slotted","client","isHydrate","bootstrap","hydrate","render","slot","_slots","iterator","children","slots","renderId","dispose","inner","createComponent","Suspense"],"mappings":"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","x_google_ignoreList":[0,1]}