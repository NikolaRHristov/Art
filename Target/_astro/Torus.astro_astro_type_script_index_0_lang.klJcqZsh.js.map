{"version":3,"file":"Torus.astro_astro_type_script_index_0_lang.klJcqZsh.js","sources":["../../Source/Function/Page/Torus.ts"],"sourcesContent":["import * as THREE from \"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.module.js\";\n\n// Set up the scene, camera, and renderer\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera(\n\t75,\n\twindow.innerWidth / window.innerHeight,\n\t0.1,\n\t1000,\n);\n\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\n\ndocument.body.appendChild(renderer.domElement);\n\n// Create a transparent torus geometry\nconst torusRadius = 10;\n\nconst tubeRadius = 3;\n\nconst torusGeometry = new THREE.TorusGeometry(\n\ttorusRadius,\n\ttubeRadius,\n\t100,\n\t100,\n);\n\nconst torusMaterial = new THREE.MeshBasicMaterial({\n\tcolor: 0x888888,\n\twireframe: true,\n\ttransparent: true,\n\topacity: 0.2,\n});\n\nconst torus = new THREE.Mesh(torusGeometry, torusMaterial);\n\nscene.add(torus);\n\n// Function to create a gradient texture\nfunction createGradientTexture(color1, color2) {\n\tconst canvas = document.createElement(\"canvas\");\n\n\tcanvas.width = 256;\n\n\tcanvas.height = 1;\n\n\tconst context = canvas.getContext(\"2d\");\n\n\tconst gradient = context.createLinearGradient(0, 0, 256, 0);\n\n\tgradient.addColorStop(0, color1);\n\n\tgradient.addColorStop(1, color2);\n\n\tcontext.fillStyle = gradient;\n\n\tcontext.fillRect(0, 0, 256, 1);\n\n\treturn new THREE.CanvasTexture(canvas);\n}\n\n// Function to create a leaf\nfunction createLeaf(u, v, color1, color2) {\n\tconst leafShape = new THREE.Shape();\n\n\tleafShape.moveTo(0, -tubeRadius);\n\n\tleafShape.quadraticCurveTo(tubeRadius * 2, 0, 0, tubeRadius);\n\n\tleafShape.quadraticCurveTo(-tubeRadius * 2, 0, 0, -tubeRadius);\n\n\tconst leafGeometry = new THREE.ShapeGeometry(leafShape);\n\n\tconst leafMaterial = new THREE.MeshBasicMaterial({\n\t\tmap: createGradientTexture(color1, color2),\n\t\tside: THREE.DoubleSide,\n\t\ttransparent: true,\n\t\topacity: 0.8,\n\t});\n\n\tconst leaf = new THREE.Mesh(leafGeometry, leafMaterial);\n\n\t// Position the leaf on the torus surface\n\tconst x = (torusRadius + tubeRadius * Math.cos(v)) * Math.cos(u);\n\n\tconst y = (torusRadius + tubeRadius * Math.cos(v)) * Math.sin(u);\n\n\tconst z = tubeRadius * Math.sin(v);\n\n\tleaf.position.set(x, y, z);\n\n\t// Orient the leaf to face outward from the torus surface\n\tleaf.lookAt(torus.position);\n\n\tleaf.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\n\n\treturn leaf;\n}\n\nconst leaves: { mesh: any; u: number; v: number; speed: number }[] = [];\n\nconst numLeaves = 20;\n\n// Create leaves\nfor (let i = 0; i < numLeaves; i++) {\n\tconst u = (i / numLeaves) * Math.PI * 2;\n\n\tconst v = (i / numLeaves) * Math.PI * 2;\n\n\tconst color1 = new THREE.Color().setHSL(i / numLeaves, 1, 0.5);\n\n\tconst color2 = new THREE.Color().setHSL((i + 0.5) / numLeaves, 1, 0.5);\n\n\tconst leaf = createLeaf(u, v, color1.getStyle(), color2.getStyle());\n\n\tscene.add(leaf);\n\n\tleaves.push({\n\t\tmesh: leaf,\n\t\tu: u,\n\t\tv: v,\n\t\tspeed: 0.005 + Math.random() * 0.005,\n\t});\n}\n\ncamera.position.z = 30;\n\n// Handle window resize\nwindow.addEventListener(\"resize\", onWindowResize, false);\n\nfunction onWindowResize() {\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n}\n\n// Animation loop\nfunction animate() {\n\trequestAnimationFrame(animate);\n\n\tleaves.forEach((leaf) => {\n\t\tleaf.u += leaf.speed;\n\n\t\tleaf.v += leaf.speed * 0.5;\n\n\t\tconst x =\n\t\t\t(torusRadius + tubeRadius * Math.cos(leaf.v)) * Math.cos(leaf.u);\n\n\t\tconst y =\n\t\t\t(torusRadius + tubeRadius * Math.cos(leaf.v)) * Math.sin(leaf.u);\n\n\t\tconst z = tubeRadius * Math.sin(leaf.v);\n\n\t\tleaf.mesh.position.set(x, y, z);\n\n\t\tleaf.mesh.lookAt(torus.position);\n\n\t\tleaf.mesh.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\n\n\t\t// Adjust z-index for overlapping effect\n\t\tleaf.mesh.renderOrder = Math.sin(leaf.u) + Math.cos(leaf.v);\n\t});\n\n\trenderer.render(scene, camera);\n}\n\nanimate();\n"],"names":["scene","THREE","camera","renderer","torusRadius","tubeRadius","torusGeometry","torusMaterial","torus","createGradientTexture","color1","color2","canvas","context","gradient","createLeaf","u","v","leafShape","leafGeometry","leafMaterial","leaf","x","z","leaves","numLeaves","i","onWindowResize","animate","y"],"mappings":"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"}